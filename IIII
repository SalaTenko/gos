1. Модель взаимодействия открытых систем OSI/ISO.
Модель взаимодействия открытых систем OSI/ISO (Open Systems Interconnection/International Organization for Standardization) является стандартной моделью, которая описывает, как различные сетевые устройства и программное обеспечение должны взаимодействовать друг с другом в рамках сети. Она была создана в 1984 году Международной организацией по стандартизации (ISO) и определяет семь уровней взаимодействия.
Вот эти уровни:
Физический уровень (Physical layer) - определяет способ передачи битов через физический канал связи, такой как провод, волоконно-оптический кабель или радиоволны.
Канальный уровень (Data link layer) - обеспечивает управление доступом к среде передачи, обнаружение ошибок, управление потоком и сегментацию/сборку данных в кадры.
Сетевой уровень (Network layer) - отвечает за маршрутизацию данных между сетями, адресацию и управление трафиком.
Транспортный уровень (Transport layer) - обеспечивает надежную доставку данных между приложениями, используя протоколы, такие как TCP или UDP.
Сеансовый уровень (Session layer) - управляет установлением, поддержанием и завершением сеанса связи между приложениями.
Уровень представления (Presentation layer) - отвечает за перевод данных из формата, используемого приложениями, в формат, который может быть передан по сети, и наоборот.
Прикладной уровень (Application layer) - предоставляет приложениям интерфейс для доступа к сетевым службам и ресурсам, таким как электронная почта, веб-сайты, файловые системы и т.д.
Каждый уровень взаимодействия OSI/ISO выполняет определенные функции и использует свои протоколы, что позволяет разным устройствам и программам работать вместе в рамках сети. Это делает модель OSI/ISO важным инструментом для разработки и поддержки сетевых приложений и устройств.
2. Понятие «линия передачи данных» (связи). Основы кодирования информации для передачи по линии связи. Понятие модуляции в линиях связи. 
Понятие «линия передачи данных (связи)
Линия передачи данных (связи) - это физический канал, по которому передаются данные между устройствами в сети. Он может быть реализован в виде проводов, оптических волокон, радиоволн или других сред передачи.
Основы кодирования информации для передачи по линии связи
Основы кодирования информации для передачи по линии связи заключаются в преобразовании информации из исходного (обычно бинарного) формата в форму, которую можно передавать по линии связи. Это может включать в себя такие методы, как преобразование битов в сигналы (например, амплитудную модуляцию), разделение сигналов на частоты (например, частотную модуляцию) и смешивание сигналов различных частот (например, фазовую модуляцию).
 Понятие модуляции в линиях связи
Понятие модуляции в линиях связи относится к процессу изменения одной или нескольких характеристик носителя сигнала (таких как амплитуда, частота или фаза) для кодирования информации. Это позволяет передавать данные по линии связи в форме, которая может быть восстановлена на другом конце линии связи с минимальными искажениями и ошибками.
Существуют различные методы модуляции, включая аналоговую модуляцию (например, AM, FM), цифровую модуляцию (например, ASK, FSK, PSK) и квадратурную модуляцию (QAM). Каждый метод модуляции имеет свои преимущества и недостатки и используется в зависимости от конкретных требований к передаче данных, таких как скорость передачи, дальность и помехозащищенность.
3. Протоколы передачи данных физического уровня: RS-232, Ethernet, Bluetooth, IrDA, xDSL, ISDN, WiFi, NFC. 
Описания протоколов передачи данных физического уровня:
RS-232 – серийный интерфейс для передачи данных между устройствами по проводам. Он используется в различных областях, включая научные и промышленные приложения, а также в компьютерных сетях.
Ethernet – семейство стандартов проводной локальной сети, предназначенных для обмена данными между компьютерами. Ethernet используется в большинстве локальных сетей в мире.
Bluetooth – беспроводной протокол передачи данных для краткодистанционных коммуникаций между устройствами. Он используется для передачи данных между мобильными устройствами, наушниками, клавиатурами и другими устройствами.
IrDA – беспроводной протокол передачи данных, использующий инфракрасную связь. Он используется для обмена данными между мобильными устройствами, но имеет ограниченный диапазон передачи данных.
xDSL – технология передачи данных по телефонным линиям. Он включает в себя несколько стандартов, включая ADSL, VDSL, SDSL и другие.
ISDN – цифровая телефонная сеть, используемая для передачи данных и голосовой связи. Он использует каналы передачи данных с фиксированной скоростью и поддерживает передачу данных на скоростях до 64 Кбит/с.
WiFi – беспроводной протокол передачи данных для локальных сетей. Он использует радиоволновые частоты для передачи данных между компьютерами и другими устройствами в локальной сети.
NFC – беспроводной протокол передачи данных для краткодистанционных коммуникаций. Он используется для передачи данных между мобильными устройствами и другими устройствами, такими как платежные терминалы и считыватели.
Каждый из этих протоколов имеет свои особенности и применения, и выбор протокола зависит от конкретных требований передачи данных.
4. Технические требования к физическим средам сетей ЭВМ и телекоммуникаций: категории витой пары, методы сварки оптоволокна. 
Технические требования к физическим средам сетей ЭВМ и телекоммуникаций включают в себя несколько аспектов, включая категории витой пары и методы сварки оптоволокна.

Категории витой пары:
Категория витой пары определяет максимальную пропускную способность и дальность передачи данных по кабелю. Существует несколько категорий витой пары, включая CAT3, CAT5, CAT6, CAT6A, CAT7 и CAT8. Категория витой пары определяется в соответствии с требованиями передачи данных в определенных приложениях. Например, категория CAT5 используется в большинстве локальных сетей, в то время как категория CAT6 и выше используется для передачи высокоскоростных данных и видео.

Методы сварки оптоволокна:
Оптоволоконный кабель используется для передачи данных по оптическим волокнам. Существует несколько методов сварки оптоволоконных кабелей, включая механическое соединение, сварку на синтезаторе и сварку на фитинге. Механическое соединение предполагает использование механических устройств для соединения оптоволоконных кабелей, в то время как сварка на синтезаторе и сварка на фитинге являются методами сварки оптических волокон, которые обеспечивают более надежное соединение.

Выбор категории витой пары и метода сварки оптоволоконного кабеля зависит от конкретных требований передачи данных, включая максимальную пропускную способность, дальность передачи и надежность соединения.
5. Способы физического подключения к сетевым устройствам для их управления. 
Существует несколько способов физического подключения к сетевым устройствам для их управления. Некоторые из них:

Подключение через консольный порт: многие устройства сетевого оборудования, такие как маршрутизаторы, коммутаторы и файрволы, оснащены консольным портом, который может быть использован для подключения к устройству через специальный кабель. Это позволяет администратору получать доступ к управляющему интерфейсу устройства, настроить его и выполнять диагностику.
Подключение через интерфейс управления по сети: многие устройства сетевого оборудования поддерживают удаленный доступ через интерфейс управления по сети, такой как SSH или Telnet. Это позволяет администратору удаленно управлять устройством и выполнять настройку и диагностику.
Подключение через web-интерфейс: многие устройства сетевого оборудования также имеют встроенный web-интерфейс, который может быть использован для управления устройством через стандартный веб-браузер. Это удобно, если администратору нужно удаленно настроить устройство из любой точки сети.
Подключение через специализированный софт: некоторые устройства могут быть управляемы через специализированный софт, который предоставляет производитель. Этот софт может быть доступен только для конкретной операционной системы и может обеспечить расширенные функции управления устройством.
Подключение через SNMP: SNMP (Simple Network Management Protocol) - это протокол управления сетью, который используется для удаленного мониторинга и управления устройствами. Многие устройства сетевого оборудования поддерживают SNMP, позволяя администраторам мониторить состояние устройств и изменять их настройки через программное обеспечение SNMP.

Выбор способа подключения к устройству для его управления зависит от типа устройства, среды, в которой оно используется, и предпочтений администратора.
6. Понятие «канал передачи». Режимы работы канала. 
Канал передачи - это физический или логический канал, который используется для передачи данных между двумя или более устройствами. Он может быть реализован различными способами, включая проводные и беспроводные среды передачи, а также сетевые технологии, такие как Интернет.
Режимы работы канала могут быть различными в зависимости от способа передачи данных и возможностей используемых устройств. Некоторые из режимов работы канала включают:

Simplex (односторонняя передача) - данные передаются только в одном направлении, например, телевизионные вещания.
Half-duplex (полудуплексная передача) - данные могут быть переданы в обоих направлениях, но только в одном направлении за раз, например, в рациях.
Full-duplex (полнодуплексная передача) - данные могут быть переданы в обоих направлениях одновременно, например, в телефонной связи или при использовании сетей Ethernet.
Многолучевая передача (Multiplexing) - это метод, при котором несколько потоков данных объединяются для передачи по одному физическому каналу, что позволяет повысить эффективность использования канала. Существует несколько типов мультиплексирования, включая временное, частотное и кодовое.
Маршрутизация (Routing) - это метод, при котором данные передаются через несколько устройств и каналов, что позволяет обеспечить более надежную и эффективную передачу данных в сети.

Режим работы канала зависит от целей передачи данных и используемых технологий, поэтому выбор режима должен осуществляться с учетом конкретных условий и требований.
7. Понятие «кадр передачи данных». 
Кадр передачи данных - это единица передачи данных, которая содержит определенную структуру и используется для организации передачи данных между устройствами в сети. Кадр передачи данных содержит информацию о начале и конце передачи данных, а также о типе и формате данных, которые передаются.

Структура кадра может варьироваться в зависимости от используемого протокола и устройств, которые участвуют в передаче данных. Обычно кадр включает в себя заголовок, данные и контрольную сумму.

Заголовок кадра содержит информацию, необходимую для организации передачи данных, включая адрес устройства-получателя и отправителя, тип передаваемых данных и дополнительные параметры. Данные, которые передаются в кадре, могут быть любого формата, например, текст, аудио, видео или другие данные.

Контрольная сумма - это значение, которое вычисляется на основе данных, передаваемых в кадре, и используется для проверки целостности данных при передаче. Контрольная сумма позволяет обнаружить ошибки в передаваемых данных, которые могут возникнуть в процессе передачи данных по сети.

Использование кадров для передачи данных является эффективным и надежным способом передачи данных между устройствами в сети. Кадры позволяют организовать передачу данных в определенном формате, обеспечивая при этом доставку данных с высокой степенью точности и надежности.
8. Метод синхронизирующих битов. 
Метод синхронизирующих битов (англ. Synchronous Bit Oriented Protocol) - это метод передачи данных, используемый в сетях связи для синхронизации передачи данных между устройствами. Он основывается на включении в передаваемый поток данных дополнительных битов - синхронизирующих битов.

Синхронизирующие биты помогают устройствам, которые принимают данные, определить начало и конец каждого передаваемого блока данных, а также синхронизировать свой внутренний тактовый генератор с тактовым сигналом, передаваемым вместе с данными.

Обычно метод синхронизирующих битов используется для передачи больших блоков данных, таких как файлы, изображения или звуковые файлы. В этом случае данные разбиваются на более мелкие блоки, которые затем передаются с использованием синхронизирующих битов для обеспечения точной синхронизации передачи данных между устройствами.

Преимуществами метода синхронизирующих битов являются надежность и стабильность передачи данных в условиях шумов и помех в канале связи. Однако этот метод может быть менее эффективным, чем другие методы передачи данных, в случаях, когда передаваемые данные имеют переменный объем или могут быть переданы в произвольных моментах времени.
9. Коды NRZ, Манчестер II, AMI. 
Кодирование данных - это процесс преобразования информации в форму, пригодную для передачи по каналу связи. Коды NRZ, Манчестер II и AMI (Alternate Mark Inversion) - это различные методы кодирования данных, используемые для передачи данных в сетях связи.

Код NRZ (Non-Return-to-Zero) - это метод кодирования, при котором биты данных представлены в виде уровней напряжения. Значение "1" может быть представлено высоким уровнем напряжения, а значение "0" - низким уровнем напряжения. Этот метод прост в реализации, но имеет недостаток в том, что может приводить к ошибкам, если в передаваемых данных есть последовательности из нескольких нулей или единиц.
Код Манчестер II - это метод кодирования, при котором каждый бит данных представлен двумя сигналами, соответствующими переходам между уровнями напряжения. Значение "1" представлено переходом от низкого к высокому уровню напряжения, а значение "0" - переходом от высокого к низкому уровню напряжения. Этот метод обеспечивает хорошую стойкость к ошибкам, так как каждый бит представлен двумя переходами, но он требует более сложной обработки сигнала при получении.
Код AMI (Alternate Mark Inversion) - это метод кодирования, при котором значение "0" представлено нулевым уровнем напряжения, а значение "1" представлено положительным или отрицательным уровнем напряжения, чередующимся между битами. Этот метод позволяет избежать последовательностей из нескольких единиц или нулей, но требует дополнительной обработки сигнала при получении.
10. Методы управления потоком передачи данных по каналу связи. Назначение линий RTS/CTS, DSR/DTR, управляющих символов XON/XOFF. 
Методы управления потоком передачи данных по каналу связи - это механизмы, которые позволяют управлять скоростью передачи данных между устройствами, чтобы избежать потери данных или переполнения буфера приемника.

Основные методы управления потоком передачи данных по каналу связи:
Управление потоком с помощью линий RTS/CTS: в этом методе устройство передачи устанавливает линию RTS (Request to Send), чтобы сообщить приемнику о готовности к передаче данных. Приемник в ответ устанавливает линию CTS (Clear to Send), что означает, что он готов принимать данные. Когда передающее устройство получает сигнал CTS, оно начинает передачу данных.
Управление потоком с помощью линий DSR/DTR: в этом методе передающее устройство устанавливает линию DTR (Data Terminal Ready), чтобы сообщить приемнику о своей готовности к передаче данных. Приемник в ответ устанавливает линию DSR (Data Set Ready), что означает, что он готов принимать данные. Когда передающее устройство получает сигнал DSR, оно начинает передачу данных.
Управление потоком с помощью управляющих символов XON/XOFF: в этом методе передающее устройство отправляет управляющий символ XON (Ctrl-Q), чтобы сообщить приемнику о готовности к передаче данных. Если буфер приемника заполнен, приемник отправляет управляющий символ XOFF (Ctrl-S), чтобы сообщить передающему устройству о том, что передачу данных нужно приостановить. Когда буфер приемника освобождается, приемник отправляет управляющий символ XON, и передача данных возобновляется.

Линии RTS/CTS и DSR/DTR используются для управления потоком в полнодуплексном режиме передачи данных, когда передача и прием данных происходят по одному и тому же каналу связи. Управляющие символы XON/XOFF используются в режиме полудуплексной передачи данных, когда передача и прием данных происходят по разным каналам связи.
11. Технология «окно передачи данных». 
Технология "окно передачи данных" используется для управления потоком данных в сетях передачи данных. Она позволяет отправителю передавать данные в сеть, не дожидаясь подтверждения от получателя о получении предыдущих кадров. Однако, передача данных происходит с учетом размера окна передачи данных, который определяется максимальным количеством байтов, которые могут быть переданы без подтверждения. Получатель отправляет подтверждение (ACK) только после того, как принял все данные в окне передачи. Если отправитель не получает подтверждения, он повторно отправляет данные. Технология "окно передачи данных" позволяет увеличить скорость передачи данных и уменьшить количество ошибок при передаче.
12. Технологии определения ошибок при передаче. 
Существует несколько технологий определения ошибок при передаче данных, которые используются в сетях передачи данных:
1. Контрольная сумма (Checksum) - это метод проверки целостности данных, который основан на вычислении контрольной суммы для каждого пакета данных и сравнении ее с контрольной суммой, полученной при приеме данных. Если контрольные суммы не совпадают, то пакет считается поврежденным и отправитель должен повторно отправить данные.
2. Паритетный бит (Parity bit) - это метод проверки четности битовых последовательностей, который используется для обнаружения ошибок при передаче данных. При использовании этого метода, каждый байт данных дополняется дополнительным битом, который указывает на четность или нечетность байта. Если при приеме данных обнаруживается несоответствие четности, то пакет считается поврежденным и отправитель должен повторно отправить данные.
3. Коды Хэмминга (Hamming code) - это метод проверки и исправления ошибок при передаче данных, который основан на добавлении дополнительных битов в передаваемые данные. Эти дополнительные биты используются для обнаружения и исправления ошибок при передаче данных. Если при приеме данных обнаруживаются ошибки, то получатель может использовать дополнительные биты для исправления ошибок.
4. CRC (Cyclic Redundancy Check) - это метод проверки целостности данных, который основан на вычислении контрольной суммы для каждого пакета данных с помощью алгоритма CRC и сравнении ее с контрольной суммой, полученной при приеме данных. Если контрольные суммы не совпадают, то пакет считается поврежденным и отправитель должен повторно отправить данные.
13. Метод контрольной суммы. Алгоритм CRC. 
Метод контрольной суммы (Checksum) использует алгоритм, который вычисляет контрольную сумму для каждого пакета данных. Контрольная сумма представляет собой число, которое вычисляется на основе всех байтов данных в пакете. При приеме данных получатель также вычисляет контрольную сумму и сравнивает ее с контрольной суммой, полученной от отправителя. Если контрольные суммы не совпадают, то пакет считается поврежденным и отправитель должен повторно отправить данные.
Алгоритм CRC (Cyclic Redundancy Check) использует полиномиальную функцию для вычисления контрольной суммы. Этот метод также основан на вычислении контрольной суммы для каждого пакета данных и сравнении ее с контрольной суммой, полученной при приеме данных. Однако, алгоритм CRC более эффективен, чем метод контрольной суммы, так как он обеспечивает более надежную защиту от ошибок при передаче данных.
14. Технология корректировки ошибок. Корректирующий код Хемминга. 
Технология корректировки ошибок (Error Correction Code, ECC) - это методы, которые позволяют обнаруживать и исправлять ошибки при передаче данных. Одним из наиболее распространенных кодов корректировки ошибок является код Хемминга.

Код Хемминга - это блочный код корректировки ошибок, который позволяет исправлять одиночные битовые ошибки и обнаруживать двойные битовые ошибки. Код Хемминга добавляет к передаваемым данным дополнительные биты (кодовые символы), которые используются для проверки целостности данных. Кодовые символы вычисляются по формуле, которая основана на битовой позиции в блоке данных, в которой произошла ошибка. Если при приеме данных обнаруживается ошибка, код Хемминга может определить, какой бит содержит ошибку, и исправить его.

Для примера, рассмотрим код Хемминга с параметрами (7, 4), где 7 - общее число бит в передаваемом блоке данных, а 4 - количество бит информации. Для этого кода Хемминга, каждый блок данных дополняется тремя дополнительными битами, которые используются для проверки и коррекции ошибок. Эти биты вычисляются с помощью формулы:

P1 = D1 xor D2 xor D4
P2 = D1 xor D3 xor D4
P3 = D2 xor D3 xor D4
где D1-D4 - это информационные биты, а P1-P3 - это дополнительные проверочные биты.

Когда блок данных передается, каждый получатель использует эти формулы для вычисления проверочных битов, которые сравниваются с полученными проверочными битами. Если обнаруживается ошибка, код Хемминга может определить, какой бит содержит ошибку, и исправить его.

Технология корректировки ошибок с помощью кодов Хемминга широко используется в различных областях, включая телекоммуникации, компьютерные сети, электронику, и т.д. Она позволяет повысить надежность передачи данных и обеспечить целостность и точность получаемой информации.
15. Понятие «инкапсуляция данных». 
Инкапсуляция данных - это процесс упаковки данных в структуру или объект, в котором данные защищены от внешнего воздействия и обеспечивается доступ к ним только через определенные методы (интерфейсы) этой структуры или объекта.

На уровне сетевых протоколов инкапсуляция данных используется для передачи информации между различными сетевыми устройствами. Каждый уровень сетевой модели OSI/ISO добавляет свой заголовок к данным, полученным от уровня выше. Таким образом, данные инкапсулируются в заголовки, которые содержат информацию о том, как эти данные должны быть обработаны на каждом уровне сетевой модели при передаче от отправителя к получателю.

Примеры протоколов, использующих инкапсуляцию данных: Ethernet, IP, TCP, UDP.
16. Протоколы HDLC, PPP. Методы авторизации канала передачи данных. Протоколы PAP, CHAP, WPA/WPA2, RADIUS. 
HDLC (High-Level Data Link Control) и PPP (Point-to-Point Protocol) являются протоколами управления передачей данных между двумя устройствами, такими как модемы или маршрутизаторы, в соединении типа point-to-point. Они обеспечивают надежную и эффективную передачу данных между устройствами на физическом уровне.

HDLC является протоколом управления передачей данных, который используется для обмена информацией между устройствами по линии связи. Он поддерживает контроль ошибок, управление потоком и множественные каналы передачи данных. HDLC используется в качестве стандарта для многих других протоколов, таких как Frame Relay и ISDN.

PPP - протокол управления передачей данных, который используется для передачи IP-пакетов между двумя устройствами в сети, работающих на уровне канала передачи данных. Он обеспечивает контроль ошибок, управление потоком и многие другие функции, необходимые для надежной передачи данных.

Для обеспечения безопасности передачи данных между устройствами на физическом уровне используются различные методы авторизации канала передачи данных.

Протоколы PAP (Password Authentication Protocol) и CHAP (Challenge-Handshake Authentication Protocol) являются протоколами аутентификации, используемыми в PPP для проверки подлинности пользователя. PAP использует пароль пользователя для аутентификации, в то время как CHAP использует более безопасный метод, основанный на обмене вызовами и ответами, чтобы обеспечить аутентификацию.

WPA/WPA2 - протоколы безопасности Wi-Fi, используемые для защиты беспроводных сетей. Они обеспечивают защиту от несанкционированного доступа к беспроводной сети, используя методы шифрования данных и аутентификации пользователей.

RADIUS (Remote Authentication Dial-In User Service) - протокол аутентификации и авторизации пользователей для сетевых сервисов, таких как VPN, Wi-Fi и др. Он используется для проверки подлинности пользователей и предоставления прав доступа к сетевым ресурсам.
17. Метод контроля доступа к разделяемой среде передачи данных: CSMA/CD. 
CSMA/CD (Carrier Sense Multiple Access with Collision Detection) - это метод контроля доступа к разделяемой среде передачи данных, который используется в локальных сетях Ethernet.

Основная идея метода CSMA/CD заключается в том, что перед тем, как компьютер начнет передачу данных, он проверяет, свободен ли канал передачи. Если канал свободен, то компьютер начинает передачу данных. Если же канал занят другим компьютером, то компьютер ждет, пока канал освободится. Если несколько компьютеров начинают передачу данных одновременно и происходит коллизия (т.е. две или более передачи данных пересекаются на линии связи), то компьютеры, участвующие в коллизии, останавливают передачу данных и ждут случайное время, прежде чем повторить попытку передачи.

Таким образом, метод CSMA/CD обеспечивает контроль доступа к разделяемой среде передачи данных и предотвращает коллизии в локальных сетях Ethernet.
18. Форматы кадров Ethernet. 
Ethernet - это наиболее распространенный протокол локальных сетей. Формат кадра Ethernet определяет структуру данных, которые передаются через сеть. Он состоит из следующих полей:

1. Преамбула - это последовательность битов, которая используется для синхронизации передачи данных.
2. Адрес назначения - это MAC-адрес устройства, которому адресован кадр.
3. Адрес источника - это MAC-адрес устройства, от которого отправлен кадр.
4. Тип/длина - это поле, которое указывает тип данных, передаваемых в кадре, или длину поля данных.
5. Данные - это поле, которое содержит сами данные, передаваемые через сеть.
6. CRC - это циклический избыточный код, который используется для проверки целостности данных в кадре.

Формат кадра Ethernet может иметь различные размеры, в зависимости от используемой версии протокола. Например, формат кадра Ethernet II имеет размер от 64 до 1518 байт, а формат кадра IEEE 802.3 имеет размер от 64 до 1522 байт.
19. Адресация узлов на канальном уровне (MAC-адрес). 
Адресация узлов на канальном уровне осуществляется с помощью MAC-адреса (Media Access Control address). MAC-адрес является уникальным идентификатором сетевого устройства на канальном уровне.

MAC-адрес представляет собой 48-битное число (6 байт), записанное в шестнадцатеричной системе счисления. Он обычно записывается в формате XX:XX:XX:XX:XX:XX, где каждый XX представляет собой один байт адреса.

Первые 3 байта MAC-адреса (24 бита) образуют идентификатор производителя (Organizationally Unique Identifier, OUI), который присваивается производителем сетевого оборудования и определяет производителя устройства. Оставшиеся 3 байта (24 бита) определяют уникальный идентификатор устройства, который присваивается производителем и должен быть уникальным для каждого устройства.

MAC-адрес используется на канальном уровне для адресации фреймов, которые передаются между устройствами в локальной сети. Каждое устройство имеет свой уникальный MAC-адрес, который позволяет другим устройствам отправлять фреймы непосредственно этому устройству. MAC-адрес используется вместе с протоколом Ethernet, который является наиболее распространенным на канальном уровне.
20. Технологии коммутации. 
Технологии коммутации - это способы управления потоком данных в сети передачи данных. Существует несколько типов технологий коммутации, каждая из которых имеет свои преимущества и недостатки.

Коммутация каналов (Circuit Switching)
При коммутации каналов сеть резервирует выделенный канал для передачи данных между двумя устройствами. Это означает, что весь канал занят только для передачи данных между этими устройствами в течение всего времени связи. Примером технологии коммутации каналов является телефонная сеть. Преимуществом этой технологии является высокое качество передачи данных, но она неэффективна для передачи больших объемов данных, поскольку канал занят только для передачи данных между двумя устройствами.

Коммутация сообщений (Message Switching)
При коммутации сообщений данные разбиваются на сообщения, которые передаются от узла к узлу в сети, пока они не достигнут пункта назначения. Каждое сообщение может проходить через разные узлы в сети и задержки передачи могут быть значительными. Примером технологии коммутации сообщений является электронная почта.

Коммутация пакетов (Packet Switching)
При коммутации пакетов данные разбиваются на небольшие пакеты, которые могут передаваться через различные маршрутизаторы и узлы в сети, пока они не достигнут пункта назначения. Это позволяет использовать канал эффективнее, так как он не блокируется для передачи данных между двумя устройствами, а используется для передачи данных различных устройств. Примером технологии коммутации пакетов является протоколы IP и Ethernet.

Также существуют гибридные технологии коммутации, которые комбинируют преимущества разных типов коммутации в одном протоколе, например, коммутация ATM (Asynchronous Transfer Mode).
21. Виртуальные локальные сети (канального и сетевого уровней). 
Виртуальная локальная сеть (VLAN) - это технология разделения локальной сети на логически отдельные сегменты, которые могут находиться на разных физических сетевых устройствах. VLAN создаются на канальном уровне (2 уровень модели OSI) и позволяют группировать устройства в виртуальные сегменты сети.

С помощью VLAN можно группировать устройства в соответствии с их функциональным назначением, без учета их физического расположения. Таким образом, можно создавать логические группы устройств, которые взаимодействуют между собой чаще, чем с другими устройствами в сети.

Существует два подхода к реализации VLAN:
Канальный подход. В этом случае, каждому VLAN присваивается определенный идентификатор (VLAN ID), который добавляется в заголовок кадра на канальном уровне. Сетевые устройства, работающие в этом режиме, могут определять, к какому VLAN относится кадр, и передавать его только на те порты, которые принадлежат данному VLAN.
Сетевой подход. В этом случае, существует возможность разделения сетей на виртуальные группы на сетевом уровне (3 уровень модели OSI). В этом случае, устройства с определенным IP-адресом будут находиться в одном VLAN. Этот подход позволяет более гибко настраивать группировку устройств в сети.

VLAN позволяют улучшить производительность и безопасность сети, снизить нагрузку на устройства и повысить уровень административного контроля над сетью. Они широко используются в современных сетях, включая корпоративные и облачные сети.
22. Протокол обнаружение кольцевых соединений (Spanning-tree-protocol). 
Протокол обнаружения кольцевых соединений (Spanning Tree Protocol, STP) - это протокол сетевого уровня, который используется для предотвращения петель в сетях, работающих по технологии коммутации.

STP работает путем определения логической топологии сети и блокирования портов на коммутаторах, чтобы избежать возможности петель и пересылки пакетов в кольцевом направлении. Каждый коммутатор в сети отправляет сообщения о состоянии своих портов, таких как блокирован, включен или отключен, на все другие коммутаторы в сети.

STP определяет корневой коммутатор (root switch), который является основным коммутатором в сети, и определяет кратчайший путь от каждого коммутатора до корневого коммутатора. Коммутаторы, находящиеся на этом пути, будут переведены в состояние прозрачного пересылки (transparent forwarding), в то время как все другие порты будут заблокированы.

STP является основным протоколом для обеспечения безопасности и эффективности сетей Ethernet. Он используется для предотвращения создания петель и обеспечения надежной и эффективной коммутации данных в сетях с большим количеством коммутаторов и многоуровневой топологией.
23. Технологии повышения пропускной способности и отказоустойчивости каналов передачи данных (LACP).
LACP (Link Aggregation Control Protocol) - это протокол, который позволяет объединить несколько физических каналов связи в один логический, обеспечивая повышение пропускной способности и отказоустойчивость каналов передачи данных.

С помощью LACP несколько физических каналов могут быть объединены в одну группу, которая выглядит как единый логический канал. Это позволяет повысить пропускную способность и увеличить отказоустойчивость, так как если один из физических каналов выходит из строя, данные могут быть отправлены по другому каналу.

LACP работает по принципу обмена сообщениями между устройствами, которые участвуют в объединении каналов. В этих сообщениях передается информация о параметрах физических каналов и о том, как они должны быть объединены в логический канал. После того, как все устройства получили и проанализировали сообщения, они формируют логический канал и начинают использовать его для передачи данных.

LACP может использоваться в различных сетевых технологиях, таких как Ethernet, Wi-Fi и других. Он является стандартом IEEE 802.3ad и поддерживается многими производителями сетевого оборудования.
24. Функции и назначение маршрутизаторов. 
Маршрутизатор – это устройство, которое работает на сетевом уровне OSI-модели и используется для пересылки пакетов между сетями. Функционально маршрутизатор выполняет следующие задачи:

Маршрутизация: выбор пути для пересылки пакета от отправителя к получателю на основе информации в заголовке пакета и таблицы маршрутизации.
Фильтрация трафика: определение и фильтрация нежелательного трафика с помощью правил маршрутизации, которые определяются на основе сетевых адресов, типов протоколов и портов.
Преобразование протоколов: преобразование пакетов одного протокола в пакеты другого протокола, чтобы устройства в разных сетях могли обмениваться данными.
Изоляция сетей: обеспечение разделения трафика между различными сетями, которые могут использовать разные протоколы и иметь различные уровни безопасности.
Балансировка нагрузки: распределение трафика между несколькими каналами связи, чтобы оптимизировать использование ресурсов и увеличить пропускную способность.
Обеспечение безопасности: защита сетей от внешних угроз, таких как атаки хакеров, вирусы и другие формы злонамеренной деятельности.
Обеспечение качества обслуживания: управление и контроль задержек, потерь пакетов и пропускной способности, чтобы обеспечить минимальную задержку и максимальную производительность сети.

Маршрутизаторы используются для создания больших сетей, объединяющих несколько локальных сетей и других сетевых устройств. Они также могут использоваться для установления виртуальных частных сетей и для связи с Интернетом.
25. Стек сетевых протоколов TCP/IP. Форма пакета. Адресация сетевых узлов по протоколу IP версии 4 и версии 6. 
Стек протоколов TCP/IP - это набор сетевых протоколов, используемых в Интернете и других компьютерных сетях для обеспечения связи между узлами. Он состоит из четырех уровней: сетевой (интернет-протоколы), транспортный (TCP/UDP), прикладной (HTTP, FTP, SMTP и другие) и интерфейса сетевого доступа (Ethernet, Wi-Fi и другие).

Формат пакета в сети TCP/IP зависит от протокола на каждом уровне стека. Общий формат пакета включает заголовок и полезную нагрузку (данные). Заголовок содержит информацию о порте отправителя и получателя, а также другие управляющие данные, такие как номер последовательности и контрольную сумму.

Адресация узлов по протоколу IP версии 4 (IPv4) осуществляется с помощью 32-битных адресов, которые обычно записываются в виде четырех чисел, разделенных точками (например, 192.168.0.1). Адресация узлов по протоколу IP версии 6 (IPv6) осуществляется с помощью 128-битных адресов, которые записываются в виде восьми групп из четырех шестнадцатеричных символов, разделенных двоеточиями (например, 2001:0db8:85a3:0000:0000:8a2e:0370:7334).

Для маршрутизации пакетов в сети TCP/IP используются таблицы маршрутизации, которые хранят информацию о том, через какой интерфейс и куда отправлять пакеты для доставки к их адресатам. Таблицы маршрутизации обновляются автоматически на основе информации о соседних сетях и маршрутизаторах, полученной с помощью протокола маршрутизации, такого как OSPF или BGP.
26. Технология маршрутизации пакетов. Понятия «адрес сети», «таблица маршрутов». 
Технология маршрутизации пакетов - это процесс выбора пути передачи пакетов через сеть от отправителя к получателю. Каждый маршрутизатор в сети имеет таблицу маршрутов, которая содержит информацию о доступных сетях и путях к ним.

Адрес сети - это идентификатор сети, на которую подключены устройства. В адресе IP версии 4 (IPv4) адрес сети определяется по маске подсети, которая указывает, какие биты в адресе устройства используются для идентификации сети, а какие - для идентификации устройства внутри этой сети. В адресе IP версии 6 (IPv6) адрес сети определяется по префиксу сети, который указывает, какие биты в адресе используются для идентификации сети.

Таблица маршрутов - это набор записей, которые описывают, каким образом маршрутизатор должен доставлять пакеты к определенным сетям или устройствам. В записи таблицы маршрутов указывается адрес назначения, маска подсети (или префикс сети для IPv6), интерфейс, через который следует отправлять пакеты, и адрес следующего маршрутизатора (шлюза), если необходимо пересылать пакеты через другой маршрутизатор.

При передаче пакета маршрутизатор анализирует адрес назначения и сравнивает его со своей таблицей маршрутов, чтобы определить наилучший путь к нему. Если маршрутизатор не может найти запись для адреса назначения в своей таблице маршрутов, он отбрасывает пакет.
27. Статическая маршрутизация. Классовая маршрутизация. Бесклассовая маршрутизация. Технологии CIDR и VLSM. 
Статическая маршрутизация - это метод маршрутизации, при котором маршруты к удаленным сетям настраиваются вручную на маршрутизаторах. Это означает, что администраторы должны вручную настраивать маршруты для каждой сети, к которой требуется доступ.

Классовая маршрутизация - это метод маршрутизации, в котором адрес IP разделяется на классы, и каждый класс определяет, какая часть адреса используется для идентификации сети, а какая - для идентификации узла в сети. Классовая маршрутизация была официально заменена бесклассовой маршрутизацией.

Бесклассовая маршрутизация - это метод маршрутизации, который используется в сетях TCP/IP, и при котором сетевой адрес делится на более короткие префиксы. Это позволяет более эффективно использовать адресное пространство и не привязываться к жестко заданным классам адресов.

Технология CIDR (Classless Inter-Domain Routing) - это метод бесклассовой маршрутизации, который позволяет более эффективно использовать адресное пространство. Вместо использования жестко заданных классов адресов CIDR использует префиксы переменной длины для определения сетевых и узловых адресов.

Технология VLSM (Variable Length Subnet Mask) - это метод бесклассовой маршрутизации, который позволяет использовать различные длины маски подсети для разных сетей внутри одного класса адресов. Это позволяет более эффективно использовать адресное пространство и настраивать более точные маршруты для разных сетей внутри одной большой сети.
28. Способы конфигурирования сетевых узлов. Статическая конфигурация. Конфигурация без участия администратора (APIPA в IPv4, Sateless в IPv6). Автоматическая конфигурация узлов (протокол BOOTP, DHCP, DHCPv6). 
Существует несколько способов конфигурирования сетевых узлов:

Статическая конфигурация - в этом случае все параметры, необходимые для настройки сетевого узла, задаются вручную администратором. Это включает в себя IP-адрес, маску подсети, шлюз по умолчанию и адреса DNS-серверов. Статическая конфигурация может быть удобна в небольших сетях, но может стать проблемой в больших сетях с большим количеством узлов.
Конфигурация без участия администратора - это метод автоматической конфигурации сетевого узла, при котором узел назначает себе IP-адрес и другие параметры сети без участия администратора. В IPv4 это реализуется через протокол APIPA (Automatic Private IP Addressing), который используется в случае, если узел не может получить IP-адрес от DHCP-сервера. В IPv6 эту функцию выполняет Stateless Address Autoconfiguration (SLAAC).
Автоматическая конфигурация узлов - в этом случае сетевой узел получает все необходимые параметры от DHCP-сервера, который автоматически назначает узлу IP-адрес, маску подсети, шлюз по умолчанию и адреса DNS-серверов. DHCP может быть использован как для IPv4, так и для IPv6.

Для автоматической конфигурации узлов существуют два протокола - BOOTP (Bootstrap Protocol) и DHCP (Dynamic Host Configuration Protocol). BOOTP был первым протоколом автоматической настройки сетевых устройств и предназначен для выдачи только базовой информации о сети. DHCP является более продвинутым протоколом и позволяет назначать устройствам больше параметров, таких как время аренды IP-адреса и дополнительные опции конфигурации. В IPv6 используется DHCPv6, который используется для автоматической конфигурации IPv6-адресов и других параметров.
29. Протокол разрешения сетевых адресов (ARP, RARP). 
Протокол разрешения сетевых адресов (ARP, Address Resolution Protocol) и обратного разрешения сетевых адресов (RARP, Reverse Address Resolution Protocol) - это протоколы, используемые для преобразования сетевых адресов устройств в физические (MAC-адреса) и наоборот.

ARP используется для определения MAC-адреса устройства по его IP-адресу в сети IPv4. Когда устройство нуждается в отправке данных другому устройству в сети, оно сначала проверяет таблицу ARP своего кэша на наличие соответствующего IP-адреса и соответствующего MAC-адреса. Если такой записи нет, то устройство отправляет широковещательный запрос ARP на всю сеть с просьбой определить MAC-адрес соответствующего IP-адреса. Устройство, имеющее соответствующий IP-адрес, отправляет ответ ARP с указанием своего MAC-адреса.

RARP, с другой стороны, используется для определения IP-адреса устройства по его MAC-адресу. Он был разработан для использования в ситуациях, когда устройства не могут получить свой IP-адрес с помощью DHCP. С помощью RARP устройство сначала отправляет запрос на получение своего IP-адреса, используя свой MAC-адрес в качестве идентификатора. RARP-сервер на сети принимает запрос и возвращает IP-адрес, связанный с данным MAC-адресом.
30. Протокол определения соседей NDP (в IP версии 6). 
Протокол определения соседей (Neighbor Discovery Protocol, NDP) является частью стека сетевых протоколов IP версии 6 (IPv6). Он предназначен для обнаружения соседних устройств в сети и обмена с ними информацией.

Некоторые функции NDP аналогичны функциям ARP в IPv4, но NDP также выполняет другие задачи, связанные с адресацией и маршрутизацией в IPv6.

Основные функции NDP включают:
обнаружение соседей в локальной сети;
определение маршрутов к соседним устройствам;
обновление и кэширование таблицы соседей;
обнаружение и устранение конфликтов адресации;
передачу сообщений об ошибках.

NDP работает в сочетании с другими протоколами IPv6, такими как ICMPv6 (Internet Control Message Protocol version 6), SLAAC (Stateless Address Autoconfiguration) и DHCPv6 (Dynamic Host Configuration Protocol version 6), чтобы обеспечить эффективную работу IPv6 в сети.
31. Протокол управления сетевыми соединениями ICMP и ICMPv6. 
Протокол управления сетевыми соединениями (Internet Control Message Protocol, ICMP) является одним из протоколов, входящих в стек протоколов TCP/IP. Он используется для передачи сообщений об ошибках и информации о состоянии сетевого соединения. ICMP работает на уровне сетевого протокола IP и используется в основном для диагностики и устранения проблем в сети.

Протокол ICMPv6 предназначен для использования с IP версии 6 и имеет аналогичные функции. Он используется для передачи сообщений об ошибках и информации о состоянии сетевого соединения, а также для работы с протоколами маршрутизации и другими службами IP версии 6.

Некоторые из наиболее распространенных сообщений ICMP включают сообщения о недоступности сетевых узлов, сообщения о превышении времени ожидания, сообщения о неправильной адресации и сообщения об успешной передаче пакетов. Эти сообщения могут использоваться для определения причин сбоев в сети и для помощи в их устранении.
32. Протокол управления сетевыми устройствами SNMP. 
Протокол управления сетевыми устройствами (Simple Network Management Protocol или SNMP) – это протокол прикладного уровня, используемый для управления и мониторинга устройств в сетях. Он позволяет собирать информацию о работе устройств, такую как загрузка процессора, используемая память, количество отправленных и полученных пакетов и другие параметры.

SNMP включает в себя набор стандартных команд и сообщений, которые могут использоваться для управления и мониторинга устройств. Он использует простой язык запросов и ответов, который позволяет администраторам управлять устройствами удаленно.

SNMP работает на основе клиент-серверной архитектуры, где сетевые устройства (агенты) сообщают информацию об их состоянии и параметрах SNMP-менеджерам. Менеджеры могут отправлять запросы к агентам и получать от них информацию.

SNMP имеет несколько версий, среди которых самыми распространенными являются SNMPv1, SNMPv2 и SNMPv3. Каждая версия содержит определенные усовершенствования и новые функции, такие как шифрование и аутентификацию.

SNMP используется в различных устройствах, таких как маршрутизаторы, коммутаторы, серверы и другие устройства в сети. Он позволяет администраторам быстро определять и исправлять проблемы в сети, а также управлять устройствами удаленно.
33. Динамическая маршрутизация. Дистанционно-векторные алгоритмы (RIP, IGRP, AOV). Протоколы состояния связей (OSPF, IS-IS). Гибридные протоколы (EIGRP). 
Динамическая маршрутизация – это процесс автоматического определения наилучшего маршрута для передачи данных между сетевыми узлами. Она основана на использовании протоколов маршрутизации, которые позволяют обмениваться информацией о состоянии сети между соседними маршрутизаторами.

Дистанционно-векторные протоколы маршрутизации, такие как RIP (Routing Information Protocol), IGRP (Interior Gateway Routing Protocol) и AOV (Adaptive Overlay), определяют маршруты на основе расстояния и вектора до соседних узлов, используя метрики, такие как количество прыжков или время задержки.

Протоколы состояния связей, такие как OSPF (Open Shortest Path First) и IS-IS (Intermediate System to Intermediate System), определяют маршруты на основе информации о состоянии связей в сети, такой как скорость передачи данных, стоимость линий связи и пропускная способность.

Гибридные протоколы, такие как EIGRP (Enhanced Interior Gateway Routing Protocol), комбинируют преимущества дистанционно-векторных и протоколов состояния связей для быстрой сходимости и устойчивости к различным сценариям сетевых сбоев.

Все эти протоколы маршрутизации выполняются на уровне сетевого протокола (например, IP) и позволяют маршрутизаторам обмениваться информацией о состоянии сети и определять оптимальные маршруты для передачи данных.
34. Понятие автономной системы. 
Автономная система (AS) - это группа связанных между собой сетей и маршрутизаторов, управляемых единым администратором и работающих под единым управлением протоколов маршрутизации. Каждая AS имеет свой уникальный номер (AS number), который присваивается ей на уровне интернета и используется для идентификации этой AS в рамках протоколов маршрутизации.

AS являются основными блоками интернет-инфраструктуры, и они связываются друг с другом с помощью протоколов маршрутизации, таких как BGP (Border Gateway Protocol). AS позволяют провайдерам и организациям управлять своей собственной частью сети, обеспечивая более эффективное управление трафиком и повышая безопасность передачи данных.
35. Многоадресная передача данных. Протокол IGMP. Технология IGMP snooping. Многоадресная маршрутизация: на основе таблиц маршрутизации и без них. Протоколы динамического конфигурирования многоадресной передачи: PIM-DM, PIM-SM. 
Многоадресная передача данных - это метод передачи данных, при котором один и тот же пакет отправляется одновременно нескольким адресатам. При этом пакет может быть доставлен только узлам, которые являются членами мультикаст-группы, которой адресован пакет.

Протокол IGMP (Internet Group Management Protocol) используется для управления мультикаст-группами на сетях IP. Он позволяет узлам подключаться к мультикаст-группам и покидать их, а также запрашивать информацию о мультикаст-группах у локального маршрутизатора.

Технология IGMP snooping - это метод, который позволяет коммутатору отслеживать трафик IGMP и узнавать, какие порты подключены к мультикаст-группам. Таким образом, коммутатор может ограничивать трансляцию мультикаст-трафика только на те порты, которые являются членами мультикаст-группы, и избежать ненужной трансляции трафика.

Многоадресная маршрутизация - это процесс маршрутизации пакетов в мультикаст-сетях. Она может быть реализована на основе таблиц маршрутизации или без них. В первом случае маршрутизатор хранит таблицу маршрутизации, которая содержит информацию о мультикаст-группах и маршрутах для доставки трафика в эти группы. Во втором случае маршрутизаторы обмениваются информацией о мультикаст-группах и используют протоколы динамической маршрутизации, такие как PIM-DM (Protocol Independent Multicast - Dense Mode) и PIM-SM (Protocol Independent Multicast - Sparse Mode), для определения наилучшего пути для доставки трафика в мультикаст-группу.
36. Система именования ресурсов и узлов сетей (DNS). 
Система доменных имен (DNS) - это распределенная база данных, которая преобразует доменные имена (например, www.example.com) в соответствующие IP-адреса. DNS упрощает работу в Интернете, позволяя пользователям использовать удобные для запоминания доменные имена вместо запоминания IP-адресов.

DNS использует иерархическую структуру доменных имен, где каждый домен имеет уникальное имя, которое состоит из нескольких частей, разделенных точками. Наиболее высокий уровень доменов (такие как .com, .org, .edu и т.д.) называются корневыми доменами.

Запросы DNS обрабатываются с помощью серверов DNS, которые находятся на разных уровнях иерархии. Когда пользователь делает запрос DNS для определенного доменного имени, его локальный DNS-сервер отправляет запрос корневому серверу, который затем направляет запрос к серверам, ответственным за более низкие уровни доменов, пока не будет найден сервер, содержащий запрашиваемую информацию.

DNS также может использоваться для обнаружения других служб, таких как серверы электронной почты и файловые серверы.
37. Технология передачи голосовых данных по сети ЭВМ (VoIP). Протокол SIP. 
Технология передачи голосовых данных по сети ЭВМ, также известная как VoIP (Voice over Internet Protocol), позволяет передавать голосовую информацию по сети данных в цифровом формате. Эта технология использует IP-протоколы для передачи голосовых данных, которые раньше передавались по аналоговой телефонной сети.

Протокол SIP (Session Initiation Protocol) является одним из основных протоколов, используемых для установки и управления VoIP-соединениями. Он позволяет устанавливать, изменять и прекращать сессии связи, в том числе голосовые вызовы, видео- и мультимедийные сессии.

SIP работает на основе клиент-серверной модели и использует порты 5060 и 5061 для установки и управления сессиями связи. Он может использоваться в различных сетевых топологиях, включая прямое соединение, NAT-трансляцию и использование прокси-серверов.

SIP также поддерживает функции, такие как переадресация, конференц-связь, автоматическая переадресация и многое другое. Благодаря этим возможностям SIP становится все более популярным протоколом для передачи голосовых данных в VoIP-системах.
38. Технология передачи электронных сообщений. Протоколы SMTP, POP, IMAP.
Технология передачи электронных сообщений (email) является широко распространенным средством коммуникации в Интернете. Для передачи и получения email используются различные протоколы, такие как SMTP, POP и IMAP.

Протокол SMTP (Simple Mail Transfer Protocol) используется для отправки email. SMTP определяет формат и содержание сообщений, а также правила передачи данных между отправителем и получателем. По умолчанию, SMTP использует порт 25 для отправки сообщений. SMTP также может использоваться для отправки сообщений между различными почтовыми серверами.

Протоколы POP (Post Office Protocol) и IMAP (Internet Message Access Protocol) используются для получения email на клиентском устройстве. POP хранит сообщения на сервере и загружает их на устройство получателя. IMAP позволяет получателю просматривать сообщения на сервере и загружать их только по запросу. По умолчанию, POP использует порт 110, а IMAP - порт 143.

В последнее время все большую популярность получает протокол IMAP4rev1, который расширяет возможности IMAP, позволяя получать доступ к папкам на сервере и управлять ими, а также поддерживает шифрование и аутентификацию пользователей.

Протоколы SMTP, POP и IMAP являются стандартами Интернета и широко используются в различных почтовых клиентах и на серверах электронной почты.
